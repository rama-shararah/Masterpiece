@model IEnumerable<MasterPieceMVC.Models.Service>

@{
    ViewBag.Title = "HomePage";
    Layout = "~/Views/Shared/MyLayout.cshtml";
}

<style>
    #background {
        background-color: #E6E6E6;
    }

    #mainPic {
        width: 40%;
    }

    #search {
        z-index: 3;
        position: absolute;
        top: 55%;
        left: 15%;
        width: 35%;
        /* border:red solid;*/
    }

    #question {
        z-index: 3;
        position: absolute;
        top: 35%;
        left: 12%;
        width: 45%;
        font-size: 50px;
    }

    #categoryCon {
        display: flex;
        /*justify-content: space-between;*/
        flex-wrap: wrap;
        width: 100%;
        height: 55vh;
        /*border: solid black;*/
        gap: 30px;
    }

    h2 {
        text-align: center;
    }

    .con {
        position: relative;
    }

        .con:hover > img {
            transform: scale(105%);
        }



    #con2 {
        display: flex;
        justify-content: space-between;
        border: solid tomato;
    }


    .center {
        position: absolute;
        top: 45%;
        left: 20%;
        font-size: 30px;
        color: white;
    }

    .card-text {
        text-align: right !important;
    }

    .card-body {
        background-color: white;
        border-top: 1px #E6E6E6 solid;
    }

    .card {
        /* border-color: #606060;*/
    }

    #con3 {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 90vh;
    }

    #gray {
        width: 80%;
        height: 70%;
        background-color: #E6E6E6;
        border-radius: 100px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 20%;
    }

    #join {
        font-size: 70px;
    }

    .checked {
        color: orange;
    }

    [data-inviewport="scale-in"] {
        transition: 1s;
        transform: translateY(-60px);
    }

        [data-inviewport="scale-in"].is-inViewport {
            transform: translateY(20px);
        }

    [data-inviewport="scale"] {
        transition: 1s;
        transform: translateX(60px);
    }

        [data-inviewport="scale"].is-inViewport {
            transform: translateX(10px);
        }


    .portfolio-inner::before, .portfolio-inner::after {
        background: rgb(6 6 6 / 60%) !important;
    }

    .font {
        font-size: 29px;
    }

    #disappear {
        height: 0px;
       
        background-color: #E6E6E6;
    }

    #parent{
        position:relative;
    }

    @@media only screen and (min-device-width: 0px) and (max-device-width: 480px) {
        #question {
            top: 0%;
            font-size: 50px;
            text-align: center;
            left: 10%;

            width: 80%;
            
        }

        #parent {
            position: relative;
            background: #E6E6E6;
            height:80vh;
        }

        #search {
            top: 50%;
            left: 31%;
            width: 40%;
            display: flex;
            flex-wrap: wrap;
        }
        #search a{
            font-size:25px;
            margin:5px
        }

        #join {
            
            text-align:center;
        }

        #gray {
            width: 80%;
            height: 100%;
            gap: 10%;
        }

        #con3 {
            height:150vh;
            margin-bottom:15px;
        }

        #carouselExampleFade{
            display:none;
        }
    }

    @@media only screen and (min-device-width: 481px) and (max-device-width: 768px) {
        #question {
            top: 25%;
            font-size: 25.5px;
            text-align: center;
        }

        #search {
            top: 45%;
            width: 30%;
            left:20%;
        }
            #search a {
                font-size: 20px;
              
            }

        #join {
            font-size: 35px;
        }

        #gray {
            width: 80%;
            height: 100%;
        }

        #con3 {
            height: 50vh;
            margin-bottom: 30px;
        }
    }
</style>
<div id="disappear"></div>
<div id="parent">
    <div id="carouselExampleFade" class="carousel slide carousel-fade" data-bs-ride="carousel">
        <div class="carousel-inner">
            @foreach (var item in Model)
            {
                <div class="carousel-item active">
                    <img src="~/pic/@item.Slider_Photo" class="d-block w-100" alt="..." />
                </div>
            }



        </div>

    </div>

    <div id="search">
        <div style="display:flex; justify-content:space-evenly; flex-wrap:wrap; align-content:space-between; ">

            <a class="btn btn-success font" href="#serv">الخدمات</a>
            @{
                MasterPieceMVC.Models.MyMasterPieceEntities db = new MasterPieceMVC.Models.MyMasterPieceEntities();
                var user = User.Identity.Name;
                if (user != "" && (User.IsInRole("ServiceProvider")))
                {
                    var shown = db.Subscripers.FirstOrDefault(x => x.AspNetUser.Email == user).Shown;
                    if (shown == false)
                    {
                        <a class="btn btn-success font" href="#con3">اشترك الان </a>
                    }
                }
            }
            @if ((!User.IsInRole("ServiceProvider")))
            {
                <a class="btn btn-success font" href="#con3">اشترك الان </a>
            }

            @*<input class="form-control me-2" style="height: 60px;" type="search" placeholder="" aria-label="Search" />*@
        </div>
    </div>
    <div id="question">ما الخدمة التي تبحث عنها اليوم ؟</div>
</div>
<br />
<br />
<br />
<h2 class="container">الخدمات المتاحة</h2>

<br />

<div id="serv" class="container-xxl py-5">
    <div class="container">
        <div class="row g-4 portfolio-container">
            @foreach (var item in Model)
            {
                <div class="col-lg-4 col-md-6 portfolio-item first wow fadeInUp" data-wow-delay="0.1s">
                    <a href="/Subscripers/AllSub/@item.Service_Id" style="text-decoration: none">
                        <div class="portfolio-inner rounded">
                            <img src="~/pic/@item.Service_Photo" alt="" width="420" height="420">
                            <div class="portfolio-text">
                                <h4 class="text-white mb-4">@item.Service_Name</h4>
                            </div>
                        </div>
                    </a>

                </div>
            }

        </div>
    </div>
</div>

@{

    var subscribers = (from sub in db.Subscripers
                       join subscr in db.Subscriptions on sub.userId equals subscr.userId
                       where subscr.Subscription_Duration == 7 where sub.Status==true
                       select sub).ToList();

}

@*@{
        MasterPieceMVC.Models.MyMasterPieceEntities db = new MasterPieceMVC.Models.MyMasterPieceEntities();


        var result = db.Requests
        .GroupBy(x => x.Subscriper_Id)
        .OrderByDescending(g => g.Max(x => x.Request_Id))
        .Take(4)
        .ToList();

        var query = db.Requests
        .SelectMany(i => i.ItemLists, (i, il) => i)
        .GroupBy(i => i.Subscriper_Id)
        .Select(g => new TopItemsInLists { ItemId = g.Key.ToString(), Quantity = g.Count() })
        .OrderByDescending(z => z.Quantity)
        .Take(10);
    }*@

<br />
<h2 class="container">المقترحات</h2>
<br />
<br />
<div class="container-xxl py-5">
    <div class="container">
        <div class="row g-4 portfolio-container">
            @{ int counter = 0;} 
            @foreach (var item in subscribers)
            {
                if (counter < 4)
                {
                <div class="col-lg-3 col-md-6 portfolio-item second wow fadeInUp" data-wow-delay="0.1s">
                    <a href="/Subscripers/SingleSub/@item.Subscriper_Id" style="color: black; text-decoration: none">
                        <div data-inviewport="scale" class="card col-lg-3 col-md-6" style="width: 18rem;">
                            <img src="~/pic/@item.Subscriper_Photo" class="card-img-top" alt="..." style="height:15rem;">
                            <div class="card-body">
                                <p class="card-text">@item.Last_Name @item.First_Name </p>
                                <p style="font-size: 14px;" class="card-text">@item.Service.Service_Name</p>
                                <div style="text-align: right;">
                                    @{
                                        
                                        var count = db.Comments.Where(x => x.Subscriper_Id == item.Subscriper_Id).Select(x => x.Rate).ToList().Count();
                                        var sum = db.Comments.Where(x => x.Subscriper_Id == item.Subscriper_Id).Select(x => x.Rate).ToList().Sum();

                                        if (count == 0)
                                        {
                                            count = 1;
                                        }
                                        var avr = sum / count;


                                    }
                                    @for (int i = 0; i < avr; i++)
                                    {
                                        <span class="fa fa-star checked"></span>
                                    }
                                    @for (int i = 0; i < (5 - avr); i++)
                                    {
                                        <span class="fa fa-star"></span>
                                    }


                                </div>
                            </div>
                        </div>
                    </a>
                </div>
                }
                counter++;
            }

        </div>
    </div>
</div>

<br />
<br />
@if ((!User.IsInRole("ServiceProvider")))
{
    <div id="con3">
        <div id="gray" class="container">
            <div id="join">!انضم الى مصلحكُم و قدم خدمتك الان</div>
            <a href="/Prices/IndexUser" class="btn btn-success" style="background-color: #45962C; font-size: 35px;">اشترك الان</a>
        </div>
    </div>
}
@if (user != "" && (User.IsInRole("ServiceProvider")))
{
    var shown = db.Subscripers.FirstOrDefault(x => x.AspNetUser.Email == user).Shown;
    if (shown == false)
    {
        <div id="con3">
            <div id="gray" class="container">
                <div id="join">!انضم الى مصلحكُم و قدم خدمتك الان</div>
                <a href="/Prices/IndexUser" class="btn btn-success" style="background-color: #45962C; font-size: 35px;">اشترك الان</a>
            </div>
        </div>
    }
}

<script>
    const inViewport = (entries, observer) => {
        entries.forEach(entry => {
            entry.target.classList.toggle("is-inViewport", entry.isIntersecting);
        });
    };

    const Obs = new IntersectionObserver(inViewport);
    const obsOptions = {};

    // Attach observer to every [data-inviewport] element:
    const ELs_inViewport = document.querySelectorAll('[data-inviewport]');
    ELs_inViewport.forEach(EL => {
        Obs.observe(EL, obsOptions);
    });
</script>
